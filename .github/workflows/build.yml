name: Build and Release Veebee

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional tag name to use when manually dispatching (e.g. v1.2.3)'
        required: false

jobs:
  build-release:
    runs-on: ubuntu-latest
    env:
      # Prefer workflow_dispatch input tag, then pushed tag name, then fallback to commit sha.
      VERSION: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name || github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
        shell: bash

      - name: Install dependencies
        run: bun install

      - name: Build Veebee executable (Windows)
        run: |
          # If you want Linux, remove --target or set to a Linux target
          bun build index.ts --compile --target=bun-windows-x64 --outfile "veebee-${VERSION}.exe"

      - name: Prepare release folder
        run: |
          mkdir -p release
          cp "veebee-${VERSION}.exe" release/
          cp CONTRIBUTING.md release/ || true
          cp CODE_OF_CONDUCT.md release/ || true
          cp README.md release/ || true
          cp LICENSE release/ || true
          cp LICENSE_GPLv3 release/ || true
          cp .env.example release/ || true

      - name: Create release zip
        run: zip -r "veebee-${VERSION}.zip" release

      - name: Create GitHub release and upload artifact
        uses: ncipollo/release-action@v1
        with:
          # tag used to identify the release. For push->tag runs this is the pushed tag.
          tag: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
          # exact release title you requested
          name: Veebee ${{ env.VERSION }}
          # make sure the zip file created above is attached
          artifacts: "veebee-${{ env.VERSION }}.zip"
          # ensure artifacts are uploaded before publishing the release (prevents source-only attachments)
          immutableCreate: true
          # replace existing artifacts with the new ones if updating an existing release with same tag
          replacesArtifacts: true
          draft: false
          prerelease: false
          token: ${{ secrets.REPO_TOKEN }}
