name: Build and Release Veebee

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    env:
      VERSION: ${{ github.ref_name }}
      ZIP_NAME: veebee-${{ github.ref_name }}.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Bun
        shell: bash
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
          bun --version

      - name: Install dependencies
        run: bun install

      - name: Build executable
        if: runner.os == 'Windows'
        run: |
          bun build index.ts --compile --outfile "veebee.exe"

      - name: Copy other OS builds (optional)
        if: runner.os != 'Windows'
        run: |
          mkdir -p build
          cp index.ts build/

      - name: Create release folder
        run: |
          mkdir release
          if [ -f veebee.exe ]; then cp veebee.exe release/; fi
          cp CONTRIBUTE.md release/ || true
          cp CODE_OF_CONDUCT.md release/ || true
          cp README.md release/ || true
          cp LICENSE release/ || true
          cp LICENSE_GPLv3 release/ || true
          cp .env.example release/ || true

      - name: Zip release
        run: |
          cd release
          zip -r "../${ZIP_NAME}" *

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Veebee ${{ github.ref_name }}"
          body: "Release of Veebee version ${{ github.ref_name }}"
          files: ${{ ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
